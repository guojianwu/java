<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gjw.mybatisplus.dao.UserInfoMapper">
    <resultMap id="BaseResultMap" type="cn.gjw.mybatisplus.entity.UserInfo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="skill" jdbcType="VARCHAR" property="skill"/>
        <result column="evaluate" jdbcType="VARCHAR" property="evaluate"/>
        <result column="fraction" jdbcType="BIGINT" property="fraction"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, name, age, skill, evaluate, fraction
    </sql>
    <select id="selectByExample" parameterType="cn.gjw.mybatisplus.entity.UserInfoExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_info
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from user_info
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="cn.gjw.mybatisplus.entity.UserInfoExample">
        delete from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.gjw.mybatisplus.entity.UserInfo">
        insert into user_info (id, name, age,
        skill, evaluate, fraction
        )
        values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER},
        #{skill,jdbcType=VARCHAR}, #{evaluate,jdbcType=VARCHAR}, #{fraction,jdbcType=BIGINT}
        )
    </insert>
    <insert id="insertSelective" parameterType="cn.gjw.mybatisplus.entity.UserInfo">
        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="skill != null">
                skill,
            </if>
            <if test="evaluate != null">
                evaluate,
            </if>
            <if test="fraction != null">
                fraction,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="skill != null">
                #{skill,jdbcType=VARCHAR},
            </if>
            <if test="evaluate != null">
                #{evaluate,jdbcType=VARCHAR},
            </if>
            <if test="fraction != null">
                #{fraction,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.gjw.mybatisplus.entity.UserInfoExample"
            resultType="java.lang.Integer">
        select count(*) from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.age != null">
                age = #{record.age,jdbcType=INTEGER},
            </if>
            <if test="record.skill != null">
                skill = #{record.skill,jdbcType=VARCHAR},
            </if>
            <if test="record.evaluate != null">
                evaluate = #{record.evaluate,jdbcType=VARCHAR},
            </if>
            <if test="record.fraction != null">
                fraction = #{record.fraction,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user_info
        set id = #{record.id,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        age = #{record.age,jdbcType=INTEGER},
        skill = #{record.skill,jdbcType=VARCHAR},
        evaluate = #{record.evaluate,jdbcType=VARCHAR},
        fraction = #{record.fraction,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.gjw.mybatisplus.entity.UserInfo">
        update user_info
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="skill != null">
                skill = #{skill,jdbcType=VARCHAR},
            </if>
            <if test="evaluate != null">
                evaluate = #{evaluate,jdbcType=VARCHAR},
            </if>
            <if test="fraction != null">
                fraction = #{fraction,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.gjw.mybatisplus.entity.UserInfo">
        update user_info
        set name = #{name,jdbcType=VARCHAR},
        age = #{age,jdbcType=INTEGER},
        skill = #{skill,jdbcType=VARCHAR},
        evaluate = #{evaluate,jdbcType=VARCHAR},
        fraction = #{fraction,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <resultMap id="BaseResultMap" type="cn.gjw.mybatisplus.entity.UserInfo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="skill" jdbcType="VARCHAR" property="skill"/>
        <result column="evaluate" jdbcType="VARCHAR" property="evaluate"/>
        <result column="fraction" jdbcType="BIGINT" property="fraction"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, name, age, skill, evaluate, fraction
    </sql>
    <select id="selectByExample" parameterType="cn.gjw.mybatisplus.entity.UserInfoExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_info
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from user_info
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="cn.gjw.mybatisplus.entity.UserInfoExample">
        delete from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.gjw.mybatisplus.entity.UserInfo">
        insert into user_info (id, name, age,
        skill, evaluate, fraction
        )
        values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER},
        #{skill,jdbcType=VARCHAR}, #{evaluate,jdbcType=VARCHAR}, #{fraction,jdbcType=BIGINT}
        )
    </insert>
    <insert id="insertSelective" parameterType="cn.gjw.mybatisplus.entity.UserInfo">
        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="skill != null">
                skill,
            </if>
            <if test="evaluate != null">
                evaluate,
            </if>
            <if test="fraction != null">
                fraction,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="skill != null">
                #{skill,jdbcType=VARCHAR},
            </if>
            <if test="evaluate != null">
                #{evaluate,jdbcType=VARCHAR},
            </if>
            <if test="fraction != null">
                #{fraction,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.gjw.mybatisplus.entity.UserInfoExample"
            resultType="java.lang.Integer">
        select count(*) from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.age != null">
                age = #{record.age,jdbcType=INTEGER},
            </if>
            <if test="record.skill != null">
                skill = #{record.skill,jdbcType=VARCHAR},
            </if>
            <if test="record.evaluate != null">
                evaluate = #{record.evaluate,jdbcType=VARCHAR},
            </if>
            <if test="record.fraction != null">
                fraction = #{record.fraction,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user_info
        set id = #{record.id,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        age = #{record.age,jdbcType=INTEGER},
        skill = #{record.skill,jdbcType=VARCHAR},
        evaluate = #{record.evaluate,jdbcType=VARCHAR},
        fraction = #{record.fraction,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.gjw.mybatisplus.entity.UserInfo">
        update user_info
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="skill != null">
                skill = #{skill,jdbcType=VARCHAR},
            </if>
            <if test="evaluate != null">
                evaluate = #{evaluate,jdbcType=VARCHAR},
            </if>
            <if test="fraction != null">
                fraction = #{fraction,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.gjw.mybatisplus.entity.UserInfo">
        update user_info
        set name = #{name,jdbcType=VARCHAR},
        age = #{age,jdbcType=INTEGER},
        skill = #{skill,jdbcType=VARCHAR},
        evaluate = #{evaluate,jdbcType=VARCHAR},
        fraction = #{fraction,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <!--    <select id="selectUserInfoByGtFraction" resultType="cn.gjw.mybatisplus.entity.UserInfoEntity">-->
    <!--        SELECT * FROM user_info WHERE fraction &gt; #{fraction}-->
    <!--    </select>-->
</mapper>